From e241c4afde811857511b8ec76dc26718a85f9c98 Mon Sep 17 00:00:00 2001
From: Ricardo Cerqueira <cyanogenmod@cerqueira.org>
Date: Fri, 1 Nov 2013 20:35:09 +0000
Subject: [PATCH 1/2] wifi: Choose correct nvram file on samsung hardware

Change-Id: I9d428ae61c1ce80d97e6ea513839ed64e8f61440
---
 wifi/Android.mk |  5 +++++
 wifi/wifi.c     | 43 +++++++++++++++++++++++++++++++++++++++----
 2 files changed, 44 insertions(+), 4 deletions(-)

diff --git a/wifi/Android.mk b/wifi/Android.mk
index 99a4b0e..815b494 100644
--- a/wifi/Android.mk
+++ b/wifi/Android.mk
@@ -31,4 +31,9 @@ ifdef WPA_SUPPLICANT_VERSION
 LOCAL_CFLAGS += -DLIBWPA_CLIENT_EXISTS
 LOCAL_SHARED_LIBRARIES += libwpa_client
 endif
+
+ifeq ($(BOARD_HAVE_SAMSUNG_WIFI),true)
+LOCAL_CFLAGS += -DSAMSUNG_WIFI
+endif
+
 LOCAL_SHARED_LIBRARIES += libnetutils
diff --git a/wifi/wifi.c b/wifi/wifi.c
index 87be8d8..823cbaa 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -132,6 +132,32 @@ static char supplicant_name[PROPERTY_VALUE_MAX];
 /* Is either SUPP_PROP_NAME or P2P_PROP_NAME */
 static char supplicant_prop_name[PROPERTY_KEY_MAX];
 
+
+#ifdef SAMSUNG_WIFI
+char* get_samsung_wifi_type()
+{
+    char buf[10];
+    int fd = open("/data/.cid.info", O_RDONLY);
+    if (fd < 0)
+        return NULL;
+
+    if (read(fd, buf, sizeof(buf)) < 0) {
+        close(fd);
+        return NULL;
+    }
+
+    close(fd);
+
+    if (strncmp(buf, "murata", 6) == 0)
+        return "_murata";
+
+    if (strncmp(buf, "semcove", 7) == 0)
+        return "_semcove";
+
+    return NULL;
+}
+#endif
+
 static int insmod(const char *filename, const char *args)
 {
     void *module;
@@ -232,13 +258,22 @@ int wifi_load_driver()
 #ifdef WIFI_DRIVER_MODULE_PATH
     char driver_status[PROPERTY_VALUE_MAX];
     int count = 100; /* wait at most 20 seconds for completion */
+    char module_arg2[256];
 
-    if (is_wifi_driver_loaded()) {
-        return 0;
-    }
+#ifdef SAMSUNG_WIFI
+    char* type = get_samsung_wifi_type();
+    snprintf(module_arg2, sizeof(module_arg2), "%s%s", DRIVER_MODULE_ARG, type == NULL ? "" : type);
 
-    if (insmod(DRIVER_MODULE_PATH, DRIVER_MODULE_ARG) < 0)
+    if (insmod(DRIVER_MODULE_PATH, module_arg2) < 0) {
+#else
+    if (insmod(DRIVER_MODULE_PATH, DRIVER_MODULE_ARG) < 0) {
+#endif
+
+#ifdef WIFI_EXT_MODULE_NAME
+        rmmod(EXT_MODULE_NAME);
+#endif
         return -1;
+    }
 
     if (strcmp(FIRMWARE_LOADER,"") == 0) {
         /* usleep(WIFI_DRIVER_LOADER_DELAY); */
-- 
2.3.5


From c2e0d87352daa69461ef2f0be54e9071b8578587 Mon Sep 17 00:00:00 2001
From: Steve Kondik <shade@chemlab.org>
Date: Thu, 20 Dec 2012 20:39:18 -0800
Subject: [PATCH 2/2] wifi: Add support for AP module args

 * Needed for Samsung's goofy handling of AP mode

Change-Id: I5ec65460b7c9f8ef34170473cf1bdaa36587767b
---
 include/hardware_legacy/wifi.h |  5 +++++
 wifi/Android.mk                |  3 +++
 wifi/wifi.c                    | 18 ++++++++++++++++++
 3 files changed, 26 insertions(+)

diff --git a/include/hardware_legacy/wifi.h b/include/hardware_legacy/wifi.h
index 7a64d52..d227922 100644
--- a/include/hardware_legacy/wifi.h
+++ b/include/hardware_legacy/wifi.h
@@ -144,6 +144,11 @@ const char *wifi_get_fw_path(int fw_type);
 int wifi_change_fw_path(const char *fwpath);
 
 /**
+ * Set the wifi mode (0 = normal, 1 = ap)
+ */
+int wifi_set_mode(int mode);
+
+/**
  * Check and create if necessary initial entropy file
  */
 #define WIFI_ENTROPY_FILE	"/data/misc/wifi/entropy.bin"
diff --git a/wifi/Android.mk b/wifi/Android.mk
index 815b494..8b86d4b 100644
--- a/wifi/Android.mk
+++ b/wifi/Android.mk
@@ -6,6 +6,9 @@ endif
 ifdef WIFI_DRIVER_MODULE_ARG
 LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_ARG=\"$(WIFI_DRIVER_MODULE_ARG)\"
 endif
+ifdef WIFI_DRIVER_MODULE_AP_ARG
+LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_AP_ARG=\"$(WIFI_DRIVER_MODULE_AP_ARG)\"
+endif
 ifdef WIFI_DRIVER_MODULE_NAME
 LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_NAME=\"$(WIFI_DRIVER_MODULE_NAME)\"
 endif
diff --git a/wifi/wifi.c b/wifi/wifi.c
index 823cbaa..7c7db52 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -69,6 +69,7 @@ static struct wpa_ctrl *monitor_conn;
 
 /* socket pair used to exit from a blocking read */
 static int exit_sockets[2];
+static int wifi_mode = 0;
 
 static char primary_iface[PROPERTY_VALUE_MAX];
 // TODO: use new ANDROID_SOCKET mechanism, once support for multiple
@@ -77,6 +78,9 @@ static char primary_iface[PROPERTY_VALUE_MAX];
 #ifndef WIFI_DRIVER_MODULE_ARG
 #define WIFI_DRIVER_MODULE_ARG          ""
 #endif
+#ifndef WIFI_DRIVER_MODULE_AP_ARG
+#define WIFI_DRIVER_MODULE_AP_ARG       ""
+#endif
 #ifndef WIFI_FIRMWARE_LOADER
 #define WIFI_FIRMWARE_LOADER		""
 #endif
@@ -104,6 +108,7 @@ static const char DRIVER_MODULE_NAME[]  = WIFI_DRIVER_MODULE_NAME;
 static const char DRIVER_MODULE_TAG[]   = WIFI_DRIVER_MODULE_NAME " ";
 static const char DRIVER_MODULE_PATH[]  = WIFI_DRIVER_MODULE_PATH;
 static const char DRIVER_MODULE_ARG[]   = WIFI_DRIVER_MODULE_ARG;
+static const char DRIVER_MODULE_AP_ARG[] = WIFI_DRIVER_MODULE_AP_ARG;
 #endif
 static const char FIRMWARE_LOADER[]     = WIFI_FIRMWARE_LOADER;
 static const char DRIVER_PROP_NAME[]    = "wlan.driver.status";
@@ -261,8 +266,16 @@ int wifi_load_driver()
     char module_arg2[256];
 
 #ifdef SAMSUNG_WIFI
+#ifdef WIFI_DRIVER_MODULE_AP_ARG
+    if (wifi_mode == 1) {
+        snprintf(module_arg2, sizeof(module_arg2), DRIVER_MODULE_AP_ARG);
+    } else {
+        snprintf(module_arg2, sizeof(module_arg2), DRIVER_MODULE_ARG);
+    }
+#else
     char* type = get_samsung_wifi_type();
     snprintf(module_arg2, sizeof(module_arg2), "%s%s", DRIVER_MODULE_ARG, type == NULL ? "" : type);
+#endif
 
     if (insmod(DRIVER_MODULE_PATH, module_arg2) < 0) {
 #else
@@ -840,3 +853,8 @@ int wifi_change_fw_path(const char *fwpath)
     close(fd);
     return ret;
 }
+
+int wifi_set_mode(int mode) {
+    wifi_mode = mode;
+    return 0;
+}
-- 
2.3.5

